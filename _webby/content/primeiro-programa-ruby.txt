---
title:      "Primeiro programa Ruby"
created_at: 2009-05-09 16:21:10.285545 -03:00
filter:
  - erb
  - textile
---
p(title). <%= h(@page.title) %>

Vamos iniciar o *SciTE*, o editor Ruby que vem com _One Click Ruby Installer_ para Windows. Para isso, em sua área de trabalho clique em _Iniciar/Programas/Ruby-186-25/SciTE_. A janela do editor se abre. Pressione a tecla F8 para abrir uma janela de saída. Agora, clique em _Options/Open Global Options File_ e procure por 'tabsize'. Altere e crie _tabsize=2_ e _indent.size=2_. Eu gosto que a janela do meu *SciTE* esteja maximizada no início e, para isso, configure _position.width=-1_ e _position.height=-1_ Pressione _Ctrl+S_ e _Ctrl+W_. Após isso, pressione _Ctrl+Shift+I_ - isso abrirá a janela de configuração de identação. Aqui, assegure que _Tab Size_ e _Indent Size_ está configurado como 2 e que a opção _Use tabs box_ não está selecionada. Clique em OK. Agora nós estamos prontos para escrever nosso primeiro programa Ruby.

Crie um diretório, como por exemplo, _programasruby_ em seu C:/ Nós armazenaremos todos os nossos programas neste diretório. Nosso primeiro programa irá exibir a string 'Olá' na janela de comando e o nome do programa será *p001ola.rb*

Por convenção, arquivos fonte Ruby tem a extensão *.rb*. No Microsoft Windows, arquivos fonte Ruby algumas vezes terminam com .rbw, como em meuscript.rbw. A convenção de codificação Ruby diz que nomes de arquivos/diretórios são escritos em letra minúscula e com extensão .rb. Por exemplo, a classe Foo tem o nome foo.rb

<div class='box'>O layout do código é por sua conta; o jeito como você escolher indentar não é relevante (mas usando dois caracteres na identação tornará você mais amigável na comunidade, se você planeja distribuir seu código).</div>

Na janela esquerda do SciTE digite: puts 'Olá' e então clique em _File/Save As..._ Dê o nome p001ola.rb e armazene ele no seu diretório programasruby. Pressione F5 para executar o programa. Você deveria ver Olá na janela de saída à direita. O programa é como o exibido abaixo:

<% coderay(:lang => "ruby", :line_numbers => "inline") do -%>
# p001ola.rb
puts 'Olá'
<% end -%>

*Nota:* Ruby é uma linguagem de script. Não existe nenhum método principal especial por onde a execução do programa inicia. É dado ao interpretador do Ruby um script de instruções para executar, e ele começa da primeira linha e continua até a última linha. *puts* (a letra *s* em *puts* quer dizer string; *puts* significa coloque uma string) simplesmente escreve na tela seja lá o que vier depois dele, mas ele também vai automaticamente para a próxima linha (exceto quando a string passada já termina com uma nova linha).

<div class='box'>
a. Parênteses são geralmente opcionais nas chamadas de métodos. Todas as chamadas abaixo são válidas:
foobar
foobar()
foobar(a, b, c)
foobar a, b, c

 b. Em Ruby, tudo desde um inteiro até uma string é considerado um objeto (mais sobre isso depois). E cada objeto foi criado com 'métodos' (termo Ruby para funções) os quais podem ser usados para várias coisas úteis. Para usar um método, você precisa por um ponto depois do objeto, e então acrescentar o nome do método. Alguns métodos como o *puts* e o *gets* estão disponíveis em todos os lugares e não precisam ser associados a um objeto específico.
Tecnicamente falando, esses métodos são fornecidos pelo módulo *Kernel* do Ruby (mais sobre isso depois) e eles são incluídos em todos os objetos Ruby (o módulo *Kernel* é incluído pela classe (mais sobre isso depois) *Object*, então esses métodos estão disponíveis em todo objeto Ruby). Quando você executa uma aplicação Ruby, um objeto chamado *main* da classe *Object* é automaticamente criado. Esse objeto proporciona acesso aos métodos de *Kernel*.
</div>

h2. Observe

# Programadores Java e C - não é necessário escrever um método/função main.
# Literais string são sequências de caracteres entre aspas simples ou dupla. Eu estou usando aspas simples em volta de Olá. ' é mais eficiente que " (mais sobre isso depois).
# Ruby é uma linguagem interpretada, então você não precisa recompilar para executar um programa escrito em Ruby.
# Lançamentos do Ruby mesmo com números de sub-versões - 1.6, 1.8, e outros - são estáveis, versões públicas. Entretanto, em 2007 Matz quebrou a convenção e criou a versão 1.9 como uma  versão pública e estável do Ruby.
# A convenção de codificação Ruby diz que nomes de arquivos/diretórios são escritos em letra minúscula e com extensão .rb. Por exemplo, a classe Foo tem o nome foo.rb.
<%- page_title, page_url = next_page %>
<div class="pagination"><%= link_to(page_title + " >" , page_url) %></div>
